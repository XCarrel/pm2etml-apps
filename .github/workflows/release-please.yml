name: release-please

on:
  push:
    branches: [ main ]

jobs:

  #Base release please workflow
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      sha: ${{ steps.release.outputs.sha }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: simple
          #default-branch: main

  deploy-release-to-staging:
    needs: release-please
    uses: ./.github/workflows/deploy.yml
    if: ${{ needs.release-please.release_created }}
    secrets: inherit
    with:
      environment: staging
      sha: ${{ needs.release-please.sha }}

  #There is a 15 minutes timeout for prod real deploy
  deploy-release-to-production:
    needs: [release-please,deploy-release-to-staging]
    uses: ./.github/workflows/deploy.yml
    secrets: inherit
    with:
      environment: production
      sha: ${{ needs.release-please.sha }}

  set-snapshot-version-after-release:
    needs: release-please
    if: ${{ needs.release-please.release_created }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref:${{ steps.release.outputs.sha }}

      #Update version to snapshot
      - name: set next version to snapshot
        run: |
          git config --global user.name github-action
          git config --global user.email github-action@noreply.com
          git co main
          if [ $(cat version.txt) = 'snapshot' ] ; then exit 0; fi
          echo "snapshot" > version.txt
          git stage version.txt
          git commit -m "chore(release): set back version to snapshot"
          git push
